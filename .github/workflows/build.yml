name: Build Action

on:
  workflow_call:
    inputs:
      project-name:
        description: "Project Name (e.g. zMenu)"
        required: true
        type: string
      java-version:
        description: "Optional java version"
        required: false
        type: string
        default: "21"
      java-distribution:
        description: "Optional java distribution"
        required: false
        type: string
        default: "temurin"
      publish:
        description: "If a package should be publish through ghcr.io"
        required: false
        type: boolean
        default: false
      project-to-publish:
        description: "Name of the project to publish (e.g. API:publish)"
        required: false
        type: string
        default: "publish"
      discord-avatar-url:
        description: "Avatar url (default to zMenu avatar)"
        required: false
        type: string
        default: "https://minecraft-inventory-builder.com/storage/images/9UgcfGZyrmbVrXw5lbj5kXq6fW8F4nhwj6Cx4nVG.png"
      runs-on:
        description: "Optional label for the runner to run on"
        required: false
        type: string
        default: "['ubuntu-latest']"
    secrets:
      WEBHOOK_URL:
        description: "Discord webhook url"
        required: true
    
jobs:
  build:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Make the short sha
        id: short_sha
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Build with Gradle
        run: ./gradlew build -Darchive.classifier=DEV -Dgithub.sha=${{ steps.short_sha.outputs.GITHUB_SHA_SHORT }}

      - name: Publish on GHCR
        if: ${{ inputs.publish && github.event_name != 'pull_request' }}
        run: ./gradlew ${{ inputs.project-to-publish }} -Darchive.classifier=DEV -Dgithub.sha=${{ steps.short_sha.outputs.GITHUB_SHA_SHORT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}

      - name: Find ${{ inputs.project-name }} JAR
        id: find_jar
        run: |
          echo "Finding ${{ inputs.project-name }} JAR..."
          jar_path=$(find target/ -name '*.jar' | head -n 1)
          echo "Found ${{ inputs.project-name }} JAR at: $jar_path"
          echo "JAR_PATH=$jar_path" >> $GITHUB_OUTPUT

      - name: Upload JAR as artifact
        if: ${{ github.event_name == 'pull_request' && steps.find_jar.outputs.JAR_PATH != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.project-name }}-DEV-${{ steps.short_sha.outputs.GITHUB_SHA_SHORT }}-PR-${{ github.event.number }}-${{ github.run_id }}
          path: ${{ steps.find_jar.outputs.JAR_PATH }}

      - name: Comment PR with JAR
        if: ${{ github.event_name == 'pull_request' && steps.find_jar.outputs.JAR_PATH != '' }}
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ðŸš€ Nouveau build DEV-PR-${{ github.event.number }} pour `${{ inputs.project-name }}`  
            [TÃ©lÃ©charger le JAR en artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Discord Webhook Action
        if: ${{ github.event_name != 'pull_request' }}
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          content: "New development build of ${{ inputs.project-name }} is available!"
          avatar-url: ${{ inputs.discord-avatar-url }}
          username: ${{ inputs.project-name }}
          filename: ${{ steps.find_jar.outputs.jar_path }}